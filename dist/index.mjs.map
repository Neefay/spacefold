{"version":3,"sources":["../src/useConstant.tsx","../src/useIsomorphicLayoutEffect.tsx","../src/index.ts"],"sourcesContent":["import { useRef } from 'react'\r\n\r\ninterface ResultBox<T> {\r\n  v: T\r\n}\r\n\r\nexport function useConstant<T>(fn: () => T): T {\r\n  const ref = useRef<ResultBox<T>>()\r\n\r\n  if (!ref.current) {\r\n    ref.current = { v: fn() }\r\n  }\r\n\r\n  return ref.current.v\r\n}\r\n","import { useEffect, useLayoutEffect } from 'react'\r\n\r\nexport const isBrowser = typeof window !== 'undefined'\r\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect\r\n\r\nexport default useIsomorphicLayoutEffect\r\n","import { useConstant } from './useConstant'\r\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\r\n\r\ntype Arr = readonly any[]\r\ntype Callback<T extends Arr> = (...args: [...T]) => void | Promise<void>\r\n\r\nexport interface Subscriber {\r\n  unsubscribe: () => void\r\n}\r\n\r\nexport interface Pub<T extends Arr = any> {\r\n  id: symbol\r\n  listeners: Set<Callback<T>>\r\n  subscribe(cb: Callback<T>): Subscriber\r\n  send(...args: [...T]): void\r\n}\r\n\r\nexport function pub(): Pub\r\nexport function pub<T>(): Pub<[T]>\r\nexport function pub<T1, T2>(): Pub<[T1, T2]>\r\nexport function pub<T1, T2, T3>(): Pub<[T1, T2, T3]>\r\nexport function pub<T1, T2, T3, T4>(): Pub<[T1, T2, T3, T4]>\r\nexport function pub<T extends Arr>(): Pub<T> {\r\n  const id = Symbol()\r\n  const listeners = new Set<Callback<T>>()\r\n  return {\r\n    id,\r\n    listeners,\r\n    send(...args: [...T]) {\r\n      for (const listener of listeners) {\r\n        listener(...args)\r\n      }\r\n    },\r\n    subscribe(cb) {\r\n      listeners.add(cb)\r\n      return {\r\n        unsubscribe() {\r\n          listeners.delete(cb)\r\n        },\r\n      }\r\n    },\r\n  }\r\n}\r\n\r\ninterface SubOpts {\r\n  register: Pub[]\r\n}\r\n\r\nexport type Sub = ReturnType<typeof sub>\r\n\r\nexport function sub(opts: SubOpts) {\r\n  const id = Symbol()\r\n  const subs = new Set<Subscriber>()\r\n\r\n  function on<T extends Arr>(pub: Pub<T>, cb: Callback<T>) {\r\n    useIsomorphicLayoutEffect(() => {\r\n      if (opts.register.every((i) => i.id !== pub.id)) {\r\n        throw new Error('This publisher is not register on your subscriber')\r\n      }\r\n\r\n      const sub = pub.subscribe(async (...args) => {\r\n        await cb(...args)\r\n      })\r\n\r\n      subs.add(sub)\r\n      return () => {\r\n        sub.unsubscribe()\r\n      }\r\n    }, [cb])\r\n  }\r\n\r\n  return {\r\n    id,\r\n    on,\r\n  }\r\n}\r\n\r\nexport function useSub(sub: Sub) {\r\n  const on = useConstant(() => sub.on)\r\n  return { on }\r\n}\r\n"],"mappings":"AAAA,OAAS,UAAAA,MAAc,QAMhB,SAASC,EAAeC,EAAgB,CAC7C,IAAMC,EAAMH,EAAqB,EAEjC,OAAKG,EAAI,UACPA,EAAI,QAAU,CAAE,EAAGD,EAAG,CAAE,GAGnBC,EAAI,QAAQ,CACrB,CCdA,OAAS,aAAAC,EAAW,mBAAAC,MAAuB,QAEpC,IAAMC,EAAY,OAAO,OAAW,IACrCC,EAA4BD,EAAYD,EAAkBD,EAEzDI,EAAQD,ECiBR,SAASE,GAA6B,CAC3C,IAAMC,EAAK,OAAO,EACZC,EAAY,IAAI,IACtB,MAAO,CACL,GAAAD,EACA,UAAAC,EACA,QAAQC,EAAc,CACpB,QAAWC,KAAYF,EACrBE,EAAS,GAAGD,CAAI,CAEpB,EACA,UAAUE,EAAI,CACZ,OAAAH,EAAU,IAAIG,CAAE,EACT,CACL,aAAc,CACZH,EAAU,OAAOG,CAAE,CACrB,CACF,CACF,CACF,CACF,CAQO,SAASC,EAAIC,EAAe,CACjC,IAAMN,EAAK,OAAO,EACZO,EAAO,IAAI,IAEjB,SAASC,EAAkBT,EAAaK,EAAiB,CACvDK,EAA0B,IAAM,CAC9B,GAAIH,EAAK,SAAS,MAAOI,GAAMA,EAAE,KAAOX,EAAI,EAAE,EAC5C,MAAM,IAAI,MAAM,mDAAmD,EAGrE,IAAMM,EAAMN,EAAI,UAAU,SAAUG,IAAS,CAC3C,MAAME,EAAG,GAAGF,CAAI,CAClB,CAAC,EAED,OAAAK,EAAK,IAAIF,CAAG,EACL,IAAM,CACXA,EAAI,YAAY,CAClB,CACF,EAAG,CAACD,CAAE,CAAC,CACT,CAEA,MAAO,CACL,GAAAJ,EACA,GAAAQ,CACF,CACF,CAEO,SAASG,EAAON,EAAU,CAE/B,MAAO,CAAE,GADEO,EAAY,IAAMP,EAAI,EAAE,CACvB,CACd","names":["useRef","useConstant","fn","ref","useEffect","useLayoutEffect","isBrowser","useIsomorphicLayoutEffect","useIsomorphicLayoutEffect_default","pub","id","listeners","args","listener","cb","sub","opts","subs","on","useIsomorphicLayoutEffect_default","i","useSub","useConstant"]}